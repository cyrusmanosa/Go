Go 的 fmt 套件提供了格式化輸出和輸入的函數，以下是 fmt 套件常用的函數及其功能：

- fmt.Println：將輸入的內容格式化並輸出到標準輸出（stdout）流中，並在最後加上換行符。
- fmt.Printf：將輸入的內容按照指定格式進行格式化並輸出到標準輸出（stdout）流中，不帶換行符。
- fmt.Sprintf：將輸入的內容按照指定格式進行格式化，並返回一個格式化後的字符串。
- fmt.Errorf：創建一個新的 error 對象，並返回一個包含錯誤信息的字符串。這個函數常用於自定義 error 類型。
- fmt.Scanln：從標準輸入（stdin）中讀取一行內容，並將其存儲到指定的變量中。
- fmt.Scanf：從標準輸入（stdin）中按照指定格式讀取內容，並將其存儲到指定的變量中。
- fmt.Sprintln：將輸入的內容格式化並返回一個字符串，並在最後加上換行符。
- fmt.Sprintf：將輸入的內容按照指定格式進行格式化，並返回一個格式化後的字符串。
- fmt.Fprintln：將輸入的內容格式化並輸出到指定的 io.Writer（例如標準輸出、文件等）中，並在最後加上換行符。
- fmt.Fprintf：將輸入的內容按照指定格式進行格式化並輸出到指定的 io.Writer（例如標準輸出、文件等）中，不帶換行符。
- fmt.Errorf：創建一個新的 error 對象，並返回一個包含錯誤信息的字符串。這個函數常用於自定義 error 類型。

這些函數提供了一種方便且簡潔的方法來格式化輸出和輸入。可以使用占位符和其他格式化選項來控制輸出的樣式。例如，可以使用 %d 占位符來輸出十進制整數，使用 %s 占位符來輸出字符串，使用 %f 占位符來輸出浮點數等。另外，還可以使用其他的格式化選項，例如對齊、精度、寬度等來控制輸出的樣式。